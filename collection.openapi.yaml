openapi: 3.0.3
info:
  title: FlyNext
  version: 1.0.0
  contact: {}
servers:
  - url: http://localhost
paths:
  /api/account/[uid]/login:
    post:
      tags:
        - Ezio
        - account
      summary: Login Account
      description: >-
        Primarily generated by Postbot:


        ### Request


        This endpoint allows a user with the uid "\[uid\]" to log in to their
        account using a POST request. The request should include a "password"
        parameter in the request body.


        - `uid` (path parameter) : The uid of the user.
            

        The request body should be in JSON format with the following key-value
        pair:


        - "password": \[string\] The password for the customer's account.
            

        ### Response


        The response to the request is in JSON format with a status code of 200.
        The response body contains a "tokens" object with a refresh token (24h
        expiry) and an access token (1h expiry)


        Example response body:


        ``` json

        {
            "tokens": {
                "refreshToken": "",
                "accessToken": ""
            }
        }

         ```
      operationId: loginAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: '123456'
            examples:
              Login Account:
                value:
                  password: '123456'
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/account/[uid]:
    patch:
      tags:
        - Ezio
        - account
      summary: Update Profile
      description: >-
        Primarily generated by Postbot:


        ### Update Account Details


        This endpoint allows you to update the account details for a specific
        user.


        - `uid` (path parameter) : The uid of the user.
            

        #### Request Body Parameters


        - `profilePic` (file): The profile picture of the user.
            
        - `firstName` (text): The first name of the user.
            
        - `lastName` (text): The last name of the user.
            
        - `email` (text): The email address of the user.
            
        - `phoneNumber` (text): The phone number of the user.
            

        #### Response


        Upon successful update, the endpoint returns a status code of 200 along
        with a JSON response containing:


        - `message`: A message indicating the success of the update.
            
        - `tokenUpdates`: A new access token and a new refresh token if the
        request only provides a valid refresh token.
      operationId: updateProfile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: email1@dom1.com
                firstName:
                  type: string
                  example: firstName1
                lastName:
                  type: string
                  example: lastName1
                phoneNumber:
                  type: string
                  example: '9999999999'
                profilePic:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/account/register:
    post:
      tags:
        - Ezio
        - account
      summary: Create Account
      description: >-
        Primarily generated by Postbot:


        The endpoint allows users to register a new account by providing their
        information. The email and the password are required.


        ### Request Body


        - `email` (string): The email address of the user.
            
        - `password` (string): The password for the new account.
            
        - `firstName` (string): The first name of the user.
            
        - `lastName` (string): The last name of the user.
            
        - `phoneNumber` (string): The phone number of the user.
            

        ### Response


        The response is in JSON format and includes the following fields:


        - `uid` (string): The unique identifier for the newly registered
        account.
            
        - `tokens` (object): An object containing the refresh token and access
        token for the registered account.
            
            - `refreshToken` (string): The refresh token for the registered account.
                
            - `accessToken` (string): The access token for the registered account.
                

        ### JSON Schema


        ``` json

        {
          "type": "object",
          "properties": {
            "uid": {
              "type": "string"
            },
            "tokens": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string"
                },
                "accessToken": {
                  "type": "string"
                }
              }
            }
          }
        }

         ```
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                registration:
                  type: object
                  properties:
                    email:
                      type: string
                      example: email1.@example.com
                    firstName:
                      type: string
                      example: firstName1
                    lastName:
                      type: string
                      example: lastName
                    password:
                      type: string
                      example: password1
                    phoneNumber:
                      type: string
                      example: '111'
            examples:
              Create Account:
                value:
                  registration:
                    email: email1.@example.com
                    firstName: firstName1
                    lastName: lastName
                    password: password1
                    phoneNumber: '111'
      responses:
        '200':
          description: ''
  /api/hotel/[hid]/room:
    get:
      tags:
        - Ezio
        - hotel
        - room
      summary: Get Room Availabilities
      description: >-
        Primarily generated by Postbot:


        ### GET /api/hotel/\[hid\]/room


        This endpoint retrieves a hotel's detailed room availability info for a
        hotel's owner.


        #### Request


        No request body is required for this request.


        - Path Parameters
            
            - hid (string, required): The ID of the hotel for which the rooms are being retrieved.
                

        #### Response


        The response is in JSON format and will have the following schema:


        ``` json

        {
            "rooms": [
                {
                    "id": "",
                    "name": "",
                    "type": "",
                    "amenities": "",
                    "pricePerNight": 0,
                    "availability": 0,
                    "createdAt": "",
                    "updatedAt": "",
                    "hotelId": "",
                    "roomAvailability": [
                        {
                            "roomId": "",
                            "date": "",
                            "availability": 0
                        }
                    ],
                    "rangedAvailability": 0
                }
            ],
            "tokenUpdates": null
        }

         ```

        - `rooms` (array): An array of room objects containing details such as
        ID, name, type, amenities, price per night, availability, creation and
        update timestamps, hotel ID, room availability, and ranged availability.
            
        - `tokenUpdates`: A new access token and a new refresh token if the
        request only provides a valid refresh token.
      operationId: getRoomAvailabilities
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
    post:
      tags:
        - Ezio
        - hotel
        - room
      summary: Define New Room Type
      description: >-
        Primarily generated by Postbot:


        This HTTP POST request allows an owner to add a new room to a specific
        hotel identified by the 'hid' parameter in the URL. The request should
        include a form-data body with the following parameters:


        - `name`: (text) The name of the room.
            
        - `type`: (text) The type of the room.
            
        - `amentities`: (text) The amenities available in the room.
            
        - `pricePerNight`: (text) The price per night for the room.
            
        - `availability`: (text) The availability status of the room.
            
        - `roomImg`: (file) Images of the room.
            

        The response to this request will be in JSON format with a status code
        of 200. The response body will include the following fields:


        - `message`: A message regarding the success or failure of the
        operation.
            
        - `imgSaveFailed`: A boolean indicating whether the images were all
        saved.
            
        - `tokenUpdates`: A new access token and a new refresh token if the
        request only provides a valid refresh token.
      operationId: defineNewRoomType
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                amentities:
                  type: string
                  example: ''
                availability:
                  type: string
                  example: '111'
                name:
                  type: string
                  example: room1
                pricePerNight:
                  type: string
                  example: '999'
                roomImg:
                  type: string
                  format: binary
                type:
                  type: string
                  example: SINGLE
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/hotel/hotel_1/room:
    patch:
      tags:
        - Ezio
        - hotel
        - room
      summary: Change Room Availability
      description: >-
        Primarily generated by Postbot:


        ### Update Hotel Room Availability


        This endpoint allows the owner to update the availability of a specific
        room in a hotel.


        #### Request Body


        - `availabilityUpdate` (object)
            
            - `room` (object)
                
                - `name` (string): The name of the room.
                    
                - `type` (string): The type of the room.
                    
            - `availability` (number): The updated availability number of the room.
                

        #### Response


        The response is in JSON format and follows the schema below:


        ``` json

        {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            },
            "tokenUpdates": {
              "type": "null"
            }
          }
        }

         ```
      operationId: changeRoomAvailability
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                availabilityUpdate:
                  type: object
                  properties:
                    availability:
                      type: number
                      example: 10
                    room:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Deluxe Suite
                        type:
                          type: string
                          example: SINGLE
            examples:
              Change Room Availability:
                value:
                  availabilityUpdate:
                    availability: 10
                    room:
                      name: Deluxe Suite
                      type: SINGLE
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/hotel/[hid]/booking:
    get:
      tags:
        - Ezio
        - hotel
        - booking
      summary: Get Hotel Bookings
      description: >-
        Primarily generated by Postbot:


        ### GET /api/hotel/\[hid\]/booking


        This endpoint retrieves all bookings of a specific hotel for its owner.


        #### Request


        No request body is required for this endpoint.


        - `hid` (path parameter) : The hid of the hotel for which the bookings
        are to be retrieved.
            

        #### Response


        The response is in JSON format and has the following schema:


        ``` json

        {
            "bookings": [
                {
                    "id": "",
                    "checkInDate": "",
                    "checkOutDate": "",
                    "status": "",
                    "type": "",
                    "createdAt": "",
                    "updatedAt": "",
                    "userId": "",
                    "hotelId": "",
                    "roomId": "",
                    "flightReference": null,
                    "itineraryId": ""
                }
            ],
            "tokenUpdates": null
        }

         ```

        - `bookings` (array): An array of booking objects containing details
        such as ID, check-in and check-out dates, status, type, creation and
        update timestamps, user ID, hotel ID, room ID, flight reference, and
        itinerary ID.
            
        - StartFragment`tokenUpdates`: A new access token and a new refresh
        token if the request only provides a valid refresh token.EndFragment
      operationId: getHotelBookings
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
    patch:
      tags:
        - Ezio
        - hotel
        - booking
      summary: Cancel a Hotel Booking
      description: >-
        Primarily generated by Postbot:


        This HTTP PATCH request is for a owner to cancel the bookings for a
        specific hotel. The request should be made to
        [http://localhost:3000/api/hotel/[hid]/booking](http://localhost:3000/api/hotel/[hid]/booking),
        where \[hid\] is the unique identifier for the hotel. The request body
        should be in raw format and include a JSON payload with the key
        "bookingIds" and an array of booking IDs to be cancelled, for example:
        {"bookingIds":\["booking_1"\]}.


        ### Request Body


        - bookingIds (array of strings): An array of booking IDs to be updated.
            

        The response to this request will have a status code of 200 and a
        content type of application/json. The response body will include a
        message and tokenUpdates, where message is a string indicating the
        result of the operation.


        ### Response Body


        - message (string): A message indicating the result of the operation.
            
        - `tokenUpdates`: A new access token and a new refresh token if the
        request only provides a valid refresh token.
      operationId: cancelAHotelBooking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingIds:
                  type: array
                  items:
                    type: string
                    example: booking_1
                  example:
                    - booking_1
            examples:
              Cancel a Hotel Booking:
                value:
                  bookingIds:
                    - booking_1
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/hotel:
    post:
      tags:
        - Ezio
        - hotel
      summary: Create Hotel
      description: >-
        Primarily generated by Postbot:


        ### Add Hotel


        This endpoint allows you to add a new hotel with the provided details.


        #### Request Body


        - `logo` (file): The logo of the hotel.
            
        - `name` (text): The name of the hotel.
            
        - `address` (text): The address of the hotel.
            
        - `city` (text): The city where the hotel is located.
            
        - `starRating` (text): The star rating of the hotel.
            
        - `hotelImg` (file): An image of the hotel (up to 9).
            

        #### Response


        Upon successful execution, the server will respond with a status code of
        200 and a JSON object containing the following fields:


        - `message`: A message indicating the status of the operation.
            
        - `imgSaveFailed`: A boolean value indicating whether the images are all
        saved.
            
        - `hid`: The hid of the newly added hotel.
            
        - `tokenUpdates`: A new access token and a new refresh token if the
        request only provides a valid refresh token.
      operationId: createHotel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                address:
                  type: string
                  example: addr1
                city:
                  type: string
                  example: city1
                hotelImg:
                  type: string
                  format: binary
                logo:
                  type: string
                  format: binary
                name:
                  type: string
                  example: hotel1
                starRating:
                  type: string
                  example: '1'
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/booking:
    get:
      tags:
        - Ezio
        - booking1
      summary: Get Bookings
      description: >-
        Primarily generated by Postbot:


        This endpoint makes an HTTP GET request to retrieve all booking
        information of a user (given the associated token) from the server.


        ### Request


        No request body parameters are required for this endpoint.


        ### Response


        - Status: 200
            
        - Content-Type: application/json
            

        The response body includes the following fields:


        - `bookings`: An array of booking information.
            
        - `itineraries`: An array of itinerary details.
            
        - `afsFailed`: A boolean value indicating if there was a failure linking
        the AFS system.
            
        - `tokenUpdates`: A new access token and a new refresh token if the
        request only provides a valid refresh token.
      operationId: getBookings
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/booking/[id]:
    patch:
      tags:
        - Ezio
        - booking1
      summary: Cancel Booking
      description: >-
        Primarily generated by Postbot:


        ### Cancel Booking Details


        This endpoint is used to cancel a specific booking identified by its
        unique ID for the associated user.


        #### Request Body


        none


        #### Response


        - Status: 200
            
        - Content-Type: application/json
            
        - `message`: A message indicating the success of the cancellation
            
        - `tokenUpdates`: A new access token and a new refresh token if the
        request only provides a valid refresh token.
      operationId: cancelBooking
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/flights_search/flights:
    get:
      tags:
        - Kenson
      summary: Flight Search - Basic
      description: Flight Search - Basic
      operationId: flightSearchBasic
      parameters:
        - name: origin
          in: query
          schema:
            type: string
            example: Toronto
        - name: destination
          in: query
          schema:
            type: string
            example: Zurich
        - name: date
          in: query
          schema:
            type: string
            example: '2024-11-17'
        - name: id
          in: query
          schema:
            type: string
            example: bd7ee4df-004d-4c95-abda-633d276a5842
        - name: returnDate
          in: query
          schema:
            type: string
            example: '2024-11-18'
      responses:
        '200':
          description: ''
  /api/auto-complete:
    get:
      tags:
        - Kenson
      summary: Auto-complete
      description: Auto-complete
      operationId: autoComplete
      parameters:
        - name: query
          in: query
          schema:
            type: string
            example: Winnipeg
      responses:
        '200':
          description: ''
  /api/book/flight:
    post:
      tags:
        - Kenson
      summary: Flight Booking
      description: Flight Booking
      operationId: flightBooking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: customer@example.com
                firstName:
                  type: string
                  example: Jane
                flightId:
                  type: string
                  example: ee372818-cd33-4886-9088-d601947777a2
                itineraryId:
                  type: string
                  example: itinerary_1
                lastName:
                  type: string
                  example: Smith
                passportNumber:
                  type: string
                  example: '123239934'
            examples:
              Flight Booking:
                value:
                  email: customer@example.com
                  firstName: Jane
                  flightId: ee372818-cd33-4886-9088-d601947777a2
                  itineraryId: itinerary_1
                  lastName: Smith
                  passportNumber: '123239934'
      responses:
        '200':
          description: ''
  /api/book/hotel:
    post:
      tags:
        - Kenson
      summary: Hotel Booking
      description: Hotel Booking
      operationId: hotelBooking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkInDate:
                  type: string
                  example: '2020-12-11'
                checkOutDate:
                  type: string
                  example: '2020-12-14'
                hotelId:
                  type: string
                  example: hotel_1
                roomId:
                  type: string
                  example: room_1
                userId:
                  type: string
                  example: customer_1
            examples:
              Hotel Booking:
                value:
                  checkInDate: '2020-12-11'
                  checkOutDate: '2020-12-14'
                  hotelId: hotel_1
                  roomId: room_1
                  userId: customer_1
      responses:
        '200':
          description: ''
  /api/book/checkout:
    post:
      tags:
        - Kenson
      summary: Checkout
      description: Checkout
      operationId: checkout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cardNumber:
                  type: string
                  example: '4111111111111111'
                cvv:
                  type: string
                  example: '123'
                expiryDate:
                  type: string
                  example: 12/25
                itineraryId:
                  type: string
                  example: itinerary_1
                totalAmount:
                  type: number
                  example: 100
                userId:
                  type: string
                  example: customer_1
            examples:
              Checkout:
                value:
                  cardNumber: '4111111111111111'
                  cvv: '123'
                  expiryDate: 12/25
                  itineraryId: itinerary_1
                  totalAmount: 100
                  userId: customer_1
      responses:
        '200':
          description: ''
  /api/suggestion/flights:
    post:
      tags:
        - Kenson
      summary: Flight Suggestions
      description: Flight Suggestions
      operationId: flightSuggestions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkInDate:
                  type: string
                  example: '2024-11-20'
                checkOutDate:
                  type: string
                  example: '2024-11-25'
                hotelId:
                  type: string
                  example: hotel_1
                origin:
                  type: string
                  example: Toronto
                return_on_checkout:
                  type: boolean
                  example: true
            examples:
              Flight Suggestions:
                value:
                  checkInDate: '2024-11-20'
                  checkOutDate: '2024-11-25'
                  hotelId: hotel_1
                  origin: Toronto
                  return_on_checkout: true
      responses:
        '200':
          description: ''
  /api/suggestion/hotels:
    post:
      tags:
        - Kenson
      summary: Hotel Suggestions
      description: Hotel Suggestions
      operationId: hotelSuggestions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                checkIn:
                  type: string
                  example: '2024-11-20'
                checkOut:
                  type: string
                  example: '2024-11-25'
                city:
                  type: string
                  example: New York
            examples:
              Hotel Suggestions:
                value:
                  checkIn: '2024-11-20'
                  checkOut: '2024-11-25'
                  city: New York
      responses:
        '200':
          description: ''
  /api/hotel_search/search:
    get:
      tags:
        - William
      summary: >-
        search hotel by check-in date, check-out date, and city, and no
        additional filter
      description: >-
        search hotel by check-in date, check-out date, and city, and no
        additional filter
      operationId: searchHotelByCheckInDateCheckOutDateAndCityAndNoAdditionalFilter
      parameters:
        - name: city
          in: query
          schema:
            type: string
            example: Toronto
        - name: checkInDate
          in: query
          schema:
            type: string
            example: '2025-03-10'
        - name: checkOutDate
          in: query
          schema:
            type: string
            example: '2025-03-15'
        - name: name
          in: query
          schema:
            type: string
            example: Grand%20Hotel
        - name: starRating
          in: query
          schema:
            type: string
            example: '5'
        - name: minPrice
          in: query
          schema:
            type: string
            example: '100'
        - name: maxPrice
          in: query
          schema:
            type: string
            example: '250'
      responses:
        '200':
          description: ''
      security:
        - {}
  /api/hotel_search/information:
    get:
      tags:
        - William
      summary: get the hotel information by hotelId
      description: get the hotel information by hotelId
      operationId: getTheHotelInformationByHotelid
      parameters:
        - name: hotelId
          in: query
          schema:
            type: string
            example: hotel_1
      responses:
        '200':
          description: ''
      security:
        - {}
  /api/hotel_search/availability:
    get:
      tags:
        - William
      summary: get the hotel room availability for each day
      description: get the hotel room availability for each day
      operationId: getTheHotelRoomAvailabilityForEachDay
      parameters:
        - name: hotelId
          in: query
          schema:
            type: string
            example: hotel_1
        - name: checkInDate
          in: query
          schema:
            type: string
            example: '2025-03-10'
        - name: checkOutDate
          in: query
          schema:
            type: string
            example: '2025-03-15'
      responses:
        '200':
          description: ''
      security:
        - {}
  /api/notifications:
    get:
      tags:
        - William
      summary: get the notification for current user
      description: get the notification for current user
      operationId: getTheNotificationForCurrentUser
      parameters:
        - name: unreadOnly
          in: query
          schema:
            type: string
            example: 'true'
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
  /api/notifications/read:
    post:
      tags:
        - William
      summary: mark the notification id as read
      description: mark the notification id as read
      operationId: markTheNotificationIdAsRead
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notificationId:
                  type: string
                  example: notif_3
            examples:
              mark the notification id as read:
                value:
                  notificationId: notif_3
      responses:
        '200':
          description: ''
      security:
        - jwtBearerAuth: []
components:
  securitySchemes:
    jwtBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
tags:
  - name: Ezio
  - name: account
    description: Account and Profile
  - name: hotel
    description: Hotel Management
  - name: room
    description: Owner manage hotel rooms
  - name: booking
    description: Owner manage hotel bookings
  - name: booking1
    description: User manage existing bookings
  - name: Kenson
  - name: William
